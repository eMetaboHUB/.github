### NOTES:
### - the 'ci_settings.xml' is used by maven commands (instead of using default one, '~/.m2/settings.xml').
### - this file recover the token provided during GitLab CI/CD in order to use it for 'GitLab Maven repository' authentication
### - the GitLab runner configuration added '/root/.m2' folder in cache in order to avoid to download all maven dependencies for each pipeline and each job.

# variables
variables:
  # maven env.
  MAVEN_CLI_OPTS: "--batch-mode -Dmaven.repo.local=/root/.m2/repository -s ci_settings.xml " # <= set 'ci_settings.xml' file

# cache 
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - target/ # <= add this path to keep generated jar / code report / javadoc betweens jobs of â‰  stages

# stages
stages:
  - build
  - tests
  - deploy
  - reports

# jobs
build:
  stage: build
  tags:
    - docker
  image: maven:3.6-jdk-11
  except:
    refs:
      - tags
  script:
    # note: unit tests are not run during this job.
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=true clean package

tests:
  stage: tests
  tags:
    - docker
  image: maven:3.6-jdk-11
  except:
    refs:
      - tags
      - master
  script:
    # note: this job only run maven test
    - mvn $MAVEN_CLI_OPTS  test
  after_script:
    #
    - mvn $MAVEN_CLI_OPTS sonar:sonar -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.login=$SONAR_TOKEN
    - echo "[gitlab-ci] print jacoco code coverage in console";
    - cat target/site/jacoco/jacoco.csv | awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }'
    - echo "[gitlab-ci] generate javadoc";
    - mvn $MAVEN_CLI_OPTS javadoc:javadoc
  coverage: '/(\d+\.?\d+) % covered/'

code report:
  stage: reports
  tags:
    - docker
  image: "pfem/ssh-utils"
  except:
    refs:
      - tags
      - master
  before_script:
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
  script:
    - echo "[gitlab-ci] remove old code report on test server";
    - ssh $SSH_OPTS $SSH_USER@$SSH_HOST_PFEMLINDEV "rm -rf /var/www/html/code_report_$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME "
    - ssh $SSH_OPTS $SSH_USER@$SSH_HOST_PFEMLINDEV "rm -rf /var/www/html/javadoc_$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME "
    - echo "[gitlab-ci] copy code report and javadoc to test server";
    - scp -r target/site/jacoco $SSH_USER@$SSH_HOST_PFEMLINDEV:/var/www/html/code_report_$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    - scp -r target/site/apidocs $SSH_USER@$SSH_HOST_PFEMLINDEV:/var/www/html/javadoc_$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME

deploy:
  stage: deploy
  tags:
    - docker
  image: maven:3.6-jdk-11
  except:
    refs:
      - tags
  script:
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=true deploy

